(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{376:function(v,s,_){"use strict";_.r(s);var t=_(43),e=Object(t.a)({},(function(){var v=this,s=v.$createElement,_=v._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"redis的数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis的数据库"}},[v._v("#")]),v._v(" redis的数据库")]),v._v(" "),_("p",[v._v("宏观上来说redis本来就是一个数据库，但是我们都知道redis中不止有一个数据库，这个数据库就是redis中真正的数据库了。")]),v._v(" "),_("p",[v._v("用户可以对这个数据库进行切换和修改添加键值对，以及还有一些超时键的问题。")]),v._v(" "),_("h2",{attrs:{id:"数据库的结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库的结构"}},[v._v("#")]),v._v(" 数据库的结构")]),v._v(" "),_("p",[v._v("redis中的所有数据库都保存在一个"),_("code",[v._v("redisServer")]),v._v("结构中的db数组中，而每个数据库的类型是"),_("code",[v._v("redisDb")]),v._v("。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222126.png",alt:""}})]),v._v(" "),_("p",[v._v("初始化服务器的时候，会根据"),_("code",[v._v("dbnum")]),v._v("来决定数据库的数量。")]),v._v(" "),_("p",[v._v("默认情况下，会创建16个数据库。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222202.png",alt:""}})]),v._v(" "),_("h2",{attrs:{id:"切换数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#切换数据库"}},[v._v("#")]),v._v(" 切换数据库")]),v._v(" "),_("p",[v._v("默认情况下，redis使用的是0号数据库。客户端可以通过"),_("code",[v._v("select")]),v._v("命令来选择特定的数据库。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222324.png",alt:""}})]),v._v(" "),_("h3",{attrs:{id:"指针"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指针"}},[v._v("#")]),v._v(" 指针")]),v._v(" "),_("p",[v._v("在服务器内部有一个redisClient结构，结构中有一个db属性记录着当前正在使用的数据库，它是一个指针结构。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222445.png",alt:""}})]),v._v(" "),_("p",[v._v("对应"),_("code",[v._v("redisServer")]),v._v("和"),_("code",[v._v("redisClient")]),v._v("的结构关系如下图：")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222531.png",alt:""}})]),v._v(" "),_("p",[v._v("当客户端执行"),_("code",[v._v("select")]),v._v("命令时，"),_("code",[v._v("redisClient")]),v._v("中的db指针的指向随之改变。")]),v._v(" "),_("h2",{attrs:{id:"键空间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#键空间"}},[v._v("#")]),v._v(" 键空间")]),v._v(" "),_("p",[v._v("redis是一个键值对数据库，而每个数据库中的键值对都是相互独立的，互不影响。所以每个数据库都应该对应着一个存储键值对的结构。它就是"),_("code",[v._v("redisDb")]),v._v("。")]),v._v(" "),_("p",[v._v("redisDb结构中有个属性为"),_("code",[v._v("dict")]),v._v("，这个字典就存储着数据库中所有的键值对。我们将这个字典称为键空间（key space）")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521222816.png",alt:""}})]),v._v(" "),_("p",[v._v("键空间和用户所见的数据库是直接对应的：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("键空间的键也就是数据库的键，每个键都是一个字符串对象。")])]),v._v(" "),_("li",[_("p",[v._v("键空间的值也就是数据库的值，每个值可以是字符串对象、列表对象、哈希表对象、\n集合对象和有序集合对象中的任意一种Redis对象。")])])]),v._v(" "),_("p",[v._v("我们来执行下面的命令：")]),v._v(" "),_("div",{staticClass:"language-bash line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[v._v("redis"),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" SET message “hello world"),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"\n\nredis> RPUSH alphabet\n(integer)3\n\nredis> HSET book name "')]),v._v("Redis "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("in")]),v._v(" Action"),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"\n(integer)1\n\nredis> HSET book author "')]),v._v("Josiah L· CarIson"),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"\n(integer)1\n\nredis> HSET book publisher "')]),v._v('Manning"\n'),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("integer"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br"),_("span",{staticClass:"line-number"},[v._v("8")]),_("br"),_("span",{staticClass:"line-number"},[v._v("9")]),_("br"),_("span",{staticClass:"line-number"},[v._v("10")]),_("br"),_("span",{staticClass:"line-number"},[v._v("11")]),_("br"),_("span",{staticClass:"line-number"},[v._v("12")]),_("br"),_("span",{staticClass:"line-number"},[v._v("13")]),_("br")])]),_("p",[v._v("执行完成后，数据库的键空间就会变成如下图的样子")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521224122.png",alt:""}})]),v._v(" "),_("h3",{attrs:{id:"读写键的其它操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#读写键的其它操作"}},[v._v("#")]),v._v(" 读写键的其它操作")]),v._v(" "),_("p",[v._v("当使用Redis命令对数据库进行读写时，服务器不仅会对键空间执行指定的读写操作，还会执行一些额外的维护操作，其中包括：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("在读取一个键之后（读操作和写操作都要对键进行读取），服务器会根据键是否存在来更新服务器的键空间命中（hit）次数或键空间不命中（miss）次数，这两个值可以在INFO stats命令的"),_("code",[v._v("keyspace_hits")]),v._v("属性和"),_("code",[v._v("keyspace_misses")]),v._v("属性中查看。")])]),v._v(" "),_("li",[_("p",[v._v("在读取一个键之后，服务器会更新键的"),_("code",[v._v("LRU")]),v._v("（最后一次使用）时间，这个值可以用于计算键的闲置时间，使用OBJECT idletime"),_("key",[v._v("命令可以查看键key的闲置时间。")])],1)]),v._v(" "),_("li",[_("p",[v._v("如果服务器在读取一个键时发现"),_("strong",[v._v("该键已经过期")]),v._v("，那么服务器会"),_("strong",[v._v("先删除这个过期键")]),v._v("，然后再进行其它操作")])]),v._v(" "),_("li",[_("p",[v._v("如果有客户端使用"),_("code",[v._v("WATCH")]),v._v("命令监视了某个键，那么服务器在对被监视的键进行修改之后，会将这个键标记为脏(dirty),从而让事务程序注意到这个键已经被修改过。")])]),v._v(" "),_("li",[_("p",[v._v("服务器每次修改一个键之后，都会对脏（dirty）键计数器的值增1，这个计数器会触发服务器的持久化以及复制操作。")])]),v._v(" "),_("li",[_("p",[v._v("如果服务器开启了数据库通知功能，那么在对键进行修改之后，服务器将按配置发送相应的数据库通知。")])])]),v._v(" "),_("h2",{attrs:{id:"键的生存时间和过期时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#键的生存时间和过期时间"}},[v._v("#")]),v._v(" 键的生存时间和过期时间")]),v._v(" "),_("p",[v._v("通过"),_("code",[v._v("expire")]),v._v("和"),_("code",[v._v("pexpire")]),v._v("命令可以设置键的生存时间（time to live）TTL。再经过指定的毫秒或者秒后，数据库就会将这个key删除。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521224750.png",alt:""}})]),v._v(" "),_("p",[v._v("通过"),_("code",[v._v("expireat")]),v._v("和"),_("code",[v._v("pexpireat")]),v._v("命令可以设置键的过期时间（expire time）。过期时间是一个时间戳，当键的过期时间到了，就会从数据库中删除这个key。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521225036.png",alt:""}})]),v._v(" "),_("h3",{attrs:{id:"保存设置的过期时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#保存设置的过期时间"}},[v._v("#")]),v._v(" 保存设置的过期时间")]),v._v(" "),_("p",[_("code",[v._v("redisDb")]),v._v("结构的"),_("code",[v._v("expires")]),v._v("字典保存了"),_("strong",[v._v("数据库中所有键的过期时间")]),v._v("，我们称这个字典为"),_("strong",[v._v("过期字典")]),v._v("：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("过期字典的键是一个指针，这个指针指向键空间中的某个键对象（也即是某个数据库键）。")])]),v._v(" "),_("li",[_("p",[v._v("过期字典的值是一个long类型的整数，这个整数保存了键所指向的数据库键的过期时间个毫秒精度的UNIX时间戳。")])])]),v._v(" "),_("p",[v._v("当我们设置了"),_("code",[v._v("alphabet")]),v._v("和"),_("code",[v._v("book")]),v._v("键的过期时间后。redisDb的结构如下")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521225227.png",alt:""}})]),v._v(" "),_("h2",{attrs:{id:"过期键的删除策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过期键的删除策略"}},[v._v("#")]),v._v(" 过期键的删除策略")]),v._v(" "),_("p",[v._v("过期的键要删除，那么采用什么策略进行删除比较好呢？redis中提供了三种删除策略。")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("定时删除：在设置键的过期时间的同时，创建一个定时器(timer），让定时器在键的\n过期时间来临时，立即执行对键的删除操作。")])]),v._v(" "),_("li",[_("p",[v._v("惰性删除：放任键过期不管，但是每次从键空间中获取键时，都检查取得的键是否\n过期，如果过期的话，就删除该键，如果没有过期，就返回该键。")])]),v._v(" "),_("li",[_("p",[v._v("定期删除：每隔一段时间，程序就对数据库进行一次检查，删除里面的过期键。至\n于要删除多少过期键，以及要检查多少个数据库，则由算法决定。")])])]),v._v(" "),_("p",[v._v("定时和定期删除属于主动删除，惰性删除则属于被动删除。")]),v._v(" "),_("h3",{attrs:{id:"定时删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定时删除"}},[v._v("#")]),v._v(" 定时删除")]),v._v(" "),_("p",[v._v("定时删除策略"),_("strong",[v._v("对内存是最友好的")]),v._v("：通过使用定时器，定时删除策略可以保证过期键会尽可能快地被删除，并释放过期键所占用的内存。")]),v._v(" "),_("p",[v._v("另一方面，定时删除策略的缺点是，它对"),_("strong",[v._v("CPU时间是最不友好的")]),v._v("：在过期键比较多的情况下，删除过期键这一行为可能会占用相当一部分CPU时间，在内存不紧张但是CPU时间非常紧张的情况下，将CPU时间用在删除和当前任务无关的过期键上，"),_("strong",[v._v("无疑会对服务器的响应时间和吞吐量造成影响")]),v._v("。")]),v._v(" "),_("p",[v._v("因此，要让服务器创建大量的定时器，从而实现定时删除策略，在现阶段来说并不现实。")]),v._v(" "),_("h3",{attrs:{id:"惰性删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#惰性删除"}},[v._v("#")]),v._v(" 惰性删除")]),v._v(" "),_("p",[v._v("惰性删除策略对"),_("strong",[v._v("CPU时间来说是最友好的")]),v._v("：程序只会在取出键时才对键进行过期检查，这可以保证删除过期键的操作只会在非做不可的情况下进行，并且删除的目标仅限于当前处理的键，这个策略不会在胤除其他无关的过期键上花费任何CPU时间。")]),v._v(" "),_("p",[v._v("惰性删除策略的缺点是，它"),_("strong",[v._v("对内存是最不友好的")]),v._v("：如果一个键已经过期，而这个键又仍然保留在数据库中，那么只要这个过期键不被删除，它所占用的内存就不会释放。")]),v._v(" "),_("p",[v._v("在使用惰性删除策略时，如果数据库中有非常多的过期键，而"),_("strong",[v._v("这些过期键又恰好没有被访问到的话，那么它们也许永远也不会被删除")]),v._v("（除非用户手动执行FLUSHDB），我们甚至可以将这种情况看作是一种内存泄漏一无用的垃圾数据占用了大量的内存，而服务器却不会自己去释放它们，这对于运行状态非常依赖于内存的Redis服务器来说，肯定不是一个好消息。")]),v._v(" "),_("h3",{attrs:{id:"定期删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定期删除"}},[v._v("#")]),v._v(" 定期删除")]),v._v(" "),_("p",[v._v("从上面对定时删除和惰性删除的讨论来看，这两种删除方式在单用时明显的缺陷：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("定时删除占用太多CPU时间，影响服务器的响应时间和吞吐量。")])]),v._v(" "),_("li",[_("p",[v._v("惰性删除浪费太多内存，有内存泄漏的危险。"),_("strong",[v._v("定期删除策略是前两种策略的一种整合和折中")]),v._v("。")])]),v._v(" "),_("li",[_("p",[v._v("定期删除策略每隔一段时间执行一次删除过期键操作，并通过限制删除操作执行的时长和频率来减少删除操作对CPU时间的影响。")])]),v._v(" "),_("li",[_("p",[v._v("除此之外，通过定期删除过期键，定期删除策略有效地减少了因为过期键而带来的内存浪费。")])])]),v._v(" "),_("p",[v._v("定期删除策略的难点是确定删除操作执行的时长和频率：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("如果删除操作执行得太频繁，或者执行的时间太长，定期删除策略就会退化成定时删除策略，以至于将CPU时间过多地消耗在删除过期键上面。")])]),v._v(" "),_("li",[_("p",[v._v("如果删除操作执行得太少，或者执行的时间太短，定期删除策略又会和惰性删除策略一样，出现浪费内存的情况。")])])]),v._v(" "),_("p",[v._v("因此，如果采用定期删除策略的话，服务器"),_("strong",[v._v("必须根据情况，合理地设置删除操作的执行")]),v._v(" "),_("strong",[v._v("时长和执行频率")]),v._v("。")]),v._v(" "),_("h2",{attrs:{id:"数据库通知"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库通知"}},[v._v("#")]),v._v(" 数据库通知")]),v._v(" "),_("p",[v._v("数据库通知时redis2.8版本新增加的功能。这个功能可以让客户端通过订阅给定的频道和模式来获取数据库中键的变化。")]),v._v(" "),_("p",[v._v("比如我们订阅信息后对"),_("code",[v._v("message")]),v._v("键进行"),_("code",[v._v("set")]),v._v("，"),_("code",[v._v("expire")]),v._v("，"),_("code",[v._v("del")]),v._v("操作。")]),v._v(" "),_("p",[_("img",{attrs:{src:"http://img.fosuchao.com/20200521231139.png",alt:""}})]),v._v(" "),_("p",[v._v("根据发回的通知显示，key、number、message三个键先后执行了DEL命令。")]),v._v(" "),_("p",[v._v("服务器配置的notify-keyspace-events选项决定了服务器所发送诵知的类型：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("想让服务器发送所有类型的键空间通知和键事件通知，可以将选项的值设置为AKE。")])]),v._v(" "),_("li",[_("p",[v._v("想让服务器发送所有类型的键空间通知，可以将选项的值设置为AK。")])]),v._v(" "),_("li",[_("p",[v._v("想让服务器发送所有类型的键事件通知，可以将选项的值设置为AE。")])]),v._v(" "),_("li",[_("p",[v._v("想让服务器只发送和字符串键有关的键空间通知，可以将选项的值设置为K$。")])]),v._v(" "),_("li",[_("p",[v._v("想让服务器只发送和列表键有关的键事件通知，可以将选项的值设置为EL。")])])]),v._v(" "),_("p",[v._v("关于数据库通知功能的详细用法，以及选项的更多设置，Redis的官方文档已经做了很详细的介绍，这里不再赘述。")])])}),[],!1,null,null,null);s.default=e.exports}}]);